BUILD_DIR = build
ASSEMBLY  = testbed
COMPILER_FLAGS = -g -shared -fdeclspec -fPIC
DEFINES =
ENGINE_LINK = -lengine

GLFW_SDK = /opt/homebrew/Cellar/glfw/3.3.8
VULKAN_SDK = /Users/romainpelle/VulkanSDK/1.3.231.1/macOS

SRC_FILES = $(shell find $(ASSEMBLY) -name *.c)
INCLUDE_FLAGS = -Iengine/src -I$(ASSEMBLY)/src -I$(GLFW_SDK)/include -L$(VULKAN_SDK)/include -I$(VULKAN_SDK)/include
LINKER_FLAGS = -L./$(BUILD_DIR) $(ENGINE_LINK) -Wl,-rpath,. -L$(GLFW_SDK)/lib -lglfw  -lvulkan -L$(VULKAN_SDK)/lib

#TODO: should not have to pass glfw here if I'm correct... (i don't need explicit vulkan so...)

# WINDOWS --------------------------------------------------------------------
ifeq ($(OS), Windows_NT)

	BUILD_PLATFORM=windows
	EXTENSION=.exe
	#TODO: not suppored
else
# LINUX ----------------------------------------------------------------------
	uname_s = $(shell uname -s)
	ifeq ($(uname_s),Linux)
		# TODO: not suppored
		BUILD_PLATFORM = Linux
		EXTENSION = 
	endif
# MACOS ----------------------------------------------------------------------
	ifeq ($(uname_s),Darwin)
		BUILD_PLATFORM = macos
		EXTENSION = 
	endif
endif

DEFINES += -D_DEBUG
COMPILER_FLAGS += -g -MD
LINKER_FLAGS += -g

.PHONY: build
build: 
	@echo "compiling $(ASSEMBLY) for $(BUILD_PLATFORM)"
	@mkdir -p $(BUILD_DIR)
	@clang $(SRC_FILES) $(DEFINES) -o $(BUILD_DIR)/$(ASSEMBLY) $(LINKER_FLAGS) $(INCLUDE_FLAGS)

clean:
	@echo "cleaning $(BUILD_DIR)/lib$(ASSEMBLY)$(EXTENSION)"
	@echo "cleaning $(BUILD_DIR)/$(ASSEMBLY)"
	@rm -rf $(BUILD_DIR)/lib$(ASSEMBLY)$(EXTENSION)
	@rm -rf $(BUILD_DIR)/$(ASSEMBLY)*

